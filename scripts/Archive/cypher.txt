
working code for Bangladesh

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/d3d37b1af062e05b86c8a94fcdbfd0640c7a3cdf/bangladesh.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})
MERGE (c1:Chokepoint {Name:csvLine.Chokepoint1})
MERGE (c4:Chokepoint {Name:csvLine.Chokepoint4})
MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (s1:Stop {Name:csvLine.Stop1})
MERGE (s2:Stop {Name:csvLine.Stop2})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Chittagong {Route_duration:csvLine.duration}]->(c1)
MERGE (c1)-[:From_Chittagong {Route_duration:csvLine.duration}]->(s1)
MERGE (s1)-[:From_Chittagong {Route_duration:csvLine.duration}]->(s2)
MERGE (s2)-[:From_Chittagong {Route_duration:csvLine.duration}]->(c4)
MERGE (c4)-[:From_Chittagong {Route_duration:csvLine.duration}]->(c5)
MERGE (c5)-[:From_Chittagong {Route_duration:csvLine.duration}]->(d)

RETURN *

---
#working code for Philippines data in Aura 
LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/d3d37b1af062e05b86c8a94fcdbfd0640c7a3cdf/philippines.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})
MERGE (c3:Chokepoint {Name:csvLine.Chokepoint3})
MERGE (c4:Chokepoint {Name:csvLine.Chokepoint4})
MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Bataan]->(c3)
MERGE (c3)-[:From_Bataan]->(c4)
MERGE (c4)-[:From_Bataan]->(c5)
MERGE (c5)-[:From_Bataan]->(d)

RETURN *

---
#working code for Bulgaria 
LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/d3d37b1af062e05b86c8a94fcdbfd0640c7a3cdf/Bulgaria.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (c1:Chokepoint {Name:csvLine.Chokepoint1})
MERGE (s1:Stop {Name:csvLine.Stop1})
MERGE (c2:Chokepoint {Name:csvLine.Chokepoint2})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Varna]->(c1)
MERGE (c1)-[:From_Varna]->(s1)
MERGE (s1)-[:From_Varna]->(c2)
MERGE (c2)-[:From_Varna]->(d)

RETURN *

---

#code for Shanghai
LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/d3d37b1af062e05b86c8a94fcdbfd0640c7a3cdf/china-shanghai.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (c1:Chokepoint {Name:csvLine.Chokepoint1})
MERGE (c4:Chokepoint {Name:csvLine.Chokepoint4})
MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Shanghai]->(c1)
MERGE (c1)-[:From_Shanghai]->(c4)
MERGE (c4)-[:From_Shanghai]->(c5)
MERGE (c5)-[:From_Shanghai]->(d)

RETURN *

--

#code for Shenzhen
LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/d3d37b1af062e05b86c8a94fcdbfd0640c7a3cdf/china-shenzhen.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (c1:Chokepoint {Name:csvLine.Chokepoint1})
MERGE (c4:Chokepoint {Name:csvLine.Chokepoint4})
MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Shenzhen]->(c1)
MERGE (c1)-[:From_Shenzhen]->(c4)
MERGE (c4)-[:From_Shenzhen]->(c5)
MERGE (c5)-[:From_Shenzhen]->(d)

RETURN *

---

#code for Guangzhou
LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/d3d37b1af062e05b86c8a94fcdbfd0640c7a3cdf/china-guangzhou.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (c1:Chokepoint {Name:csvLine.Chokepoint1})
MERGE (c4:Chokepoint {Name:csvLine.Chokepoint4})
MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Guangzhou]->(c1)
MERGE (c1)-[:From_Guangzhou]->(c4)
MERGE (c4)-[:From_Guangzhou]->(c5)
MERGE (c5)-[:From_Guangzhou]->(d)

RETURN *

---

#code for Ningbo-Zhoushan

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/d3d37b1af062e05b86c8a94fcdbfd0640c7a3cdf/china-ningbo.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (c1:Chokepoint {Name:csvLine.Chokepoint1})
MERGE (c4:Chokepoint {Name:csvLine.Chokepoint4})
MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_NingboZhoushan]->(c1)
MERGE (c1)-[:From_NingboZhoushan]->(c4)
MERGE (c4)-[:From_NingboZhoushan]->(c5)
MERGE (c5)-[:From_NingboZhoushan]->(d)

RETURN *


---
#code for Qingdao

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/d3d37b1af062e05b86c8a94fcdbfd0640c7a3cdf/china-qingdao.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (c1:Chokepoint {Name:csvLine.Chokepoint1})
MERGE (c4:Chokepoint {Name:csvLine.Chokepoint4})
MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Qingdao]->(c1)
MERGE (c1)-[:From_Qingdao]->(c4)
MERGE (c4)-[:From_Qingdao]->(c5)
MERGE (c5)-[:From_Qingdao]->(d)

RETURN *

---

#code for Egypt Alexandria

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/d3d37b1af062e05b86c8a94fcdbfd0640c7a3cdf/Egypt.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (c2:Chokepoint {Name:csvLine.Chokepoint2})

MERGE (s1:Stop {Name:csvLine.Stop1})
MERGE (s2:Stop {Name:csvLine.Stop2})
MERGE (s3:Stop {Name:csvLine.Stop3})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Alexandria]->(s1)
MERGE (s1)-[:From_Alexandria]->(s2)
MERGE (s2)-[:From_Alexandria]->(c2)
MERGE (c2)-[:From_Alexandria]->(s3)
MERGE (s3)-[:From_Alexandria]->(d)

RETURN *
---
#code for Egypt damietta

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/d3d37b1af062e05b86c8a94fcdbfd0640c7a3cdf/egypt-damietta.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (c1:Chokepoint {Name:csvLine.Chokepoint1})

MERGE (d:Destination {Destination:csvLine.Destination})


MERGE (o)-[:From_Damietta {Route_duration:csvLine.duration}]->(c1)
MERGE (c1)-[:From_Damietta {Route_duration:csvLine.duration}]->(d)

RETURN *

---

# code for Setubal

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/d3d37b1af062e05b86c8a94fcdbfd0640c7a3cdf/portugal-setubal.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Sebutal {Route_duration:csvLine.duration}]->(d)


RETURN *


--

#code for rotterdam

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/d3d37b1af062e05b86c8a94fcdbfd0640c7a3cdf/nl-rotterdam.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Rotterdam {Route_duration:csvLine.duration}]->(d)

RETURN *

---

#code for mumbai

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/db626ab6a43049831f4f3e0b6cf8941376307135/india-mumbai.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (c4:Chokepoint {Name:csvLine.Chokepoint4})
MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Mumbai {Route_duration:csvLine.duration}]->(c4)
MERGE (c4)-[:From_Mumbai {Route_duration:csvLine.duration}]->(c5)
MERGE (c5)-[:From_Mumbai {Route_duration:csvLine.duration}]->(d)

RETURN *

---

#code for aliaga

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/d3d37b1af062e05b86c8a94fcdbfd0640c7a3cdf/turkey-aliaga.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (c4:Chokepoint {Name:csvLine.Chokepoint4})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Aliaga {Route_duration:csvLine.duration}]->(c4)
MERGE (c4)-[:From_Aliaga {Route_duration:csvLine.duration}]->(d)

RETURN *

---

#code for gemlik

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/d3d37b1af062e05b86c8a94fcdbfd0640c7a3cdf/turkey-gemlik.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (c3:Chokepoint {Name:csvLine.Chokepoint3})
MERGE (c4:Chokepoint {Name:csvLine.Chokepoint4})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Gemlik {Route_duration:csvLine.duration}]->(c3)
MERGE (c3)-[:From_Gemlik {Route_duration:csvLine.duration}]->(c4)
MERGE (c4)-[:From_Gemlik {Route_duration:csvLine.duration}]->(d)

RETURN *

---
# Code for Zeebrugge

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/8e35c31a396c89e7f6fbfdd2f7e711d066a91ef4/zeebrugge.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Zeebrugge {Route_duration:csvLine.duration}]->(d)

RETURN *

---
# Code for Valparaiso

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/8e35c31a396c89e7f6fbfdd2f7e711d066a91ef4/valparaiso.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (c1:Chokepoint {Name:csvLine.Chokepoint1})

MERGE (s1:Stop {Name:csvLine.Stop1})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Valparaiso]->(c1)
MERGE (c1)-[:From_Valparaiso]->(s1)
MERGE (s1)-[:From_Valparaiso]->(d)

RETURN *

---

# Code for Ferrol

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/8e35c31a396c89e7f6fbfdd2f7e711d066a91ef4/ferrol.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Ferrol]->(d)

RETURN *

---

# Code for Salerno

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/8e35c31a396c89e7f6fbfdd2f7e711d066a91ef4/salerno.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Salerno]->(c5)
MERGE (c5)-[:From_Salerno]->(d)

RETURN *

---

# Code for Port Qasim

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/8e35c31a396c89e7f6fbfdd2f7e711d066a91ef4/port_qasim.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (c4:Chokepoint {Name:csvLine.Chokepoint4})
MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Port_Qasim]->(c4)
MERGE (c4)-[:From_Port_Qasim]->(c5)
MERGE (c5)-[:From_Port_Qasim]->(d)

RETURN *

---

# Code for Dublin

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/4ab79684fdc70bc75f0d6d78763a64f98d16db75/dublin.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Dublin]->(d)

RETURN *

---

# Code for Cape Town

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/b244f0611a0ad4368ce94503f8dcb5dd442350c7/cape_town.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (s1:Stop {Name:csvLine.Stop1})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Cape_Town]->(s1)
MERGE (s1)-[:From_Cape_Town]->(d)

RETURN *

---

# Code for Laem Chabang

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/b244f0611a0ad4368ce94503f8dcb5dd442350c7/laem_chabang.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (s1:Stop {Name:csvLine.Stop1})

MERGE (c1:Chokepoint {Name:csvLine.Chokepoint1})
MERGE (c4:Chokepoint {Name:csvLine.Chokepoint4})
MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Laem_Chabang]->(c1)
MERGE (c1)-[:From_Laem_Chabang]->(s1)
MERGE (s1)-[:From_Laem_Chabang]->(c4)
MERGE (c4)-[:From_Laem_Chabang]->(c5)
MERGE (c5)-[:From_Laem_Chabang]->(d)

RETURN *


---

# Code for Tauranga

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/b244f0611a0ad4368ce94503f8dcb5dd442350c7/tauranga.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (s1:Stop {Name:csvLine.Stop1})
MERGE (s2:Stop {Name:csvLine.Stop2})

MERGE (c1:Chokepoint {Name:csvLine.Chokepoint1})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Tauranga_New_Zealand]->(c1)
MERGE (c1)-[:From_Tauranga_New_Zealand]->(s1)
MERGE (s1)-[:From_Tauranga_New_Zealand]->(s2)
MERGE (s2)-[:From_Tauranga_New_Zealand]->(d)

RETURN *

---

# Code for Moin

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/b244f0611a0ad4368ce94503f8dcb5dd442350c7/moin.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Moin_Costa_Rica]->(d)

RETURN *

---

# Code for Tangier

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/b244f0611a0ad4368ce94503f8dcb5dd442350c7/tangier.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Tangier_Morocco]->(c5)
MERGE (c5)-[:From_Tangier_Morocco]->(d)

RETURN *

---

# Code for Piraeus

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/b244f0611a0ad4368ce94503f8dcb5dd442350c7/Piraeus.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (s1:Stop {Name:csvLine.Stop1})

MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Piraeus_Greece]->(s1)
MERGE (s1)-[:From_Piraeus_Greece]->(c5)
MERGE (c5)-[:From_Piraeus_Greece]->(d)

RETURN *

---

# Code for tanjung_pelepas

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/b244f0611a0ad4368ce94503f8dcb5dd442350c7/tanjung_pelepas.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (s1:Stop {Name:csvLine.Stop1})

MERGE (c3:Chokepoint {Name:csvLine.Chokepoint3})
MERGE (c4:Chokepoint {Name:csvLine.Chokepoint4})
MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Tanjung_Pelepas_Malaysia]->(s1)
MERGE (s1)-[:From_Tanjung_Pelepas_Malaysia]->(c3)
MERGE (c3)-[:From_Tanjung_Pelepas_Malaysia]->(c4)
MERGE (c4)-[:From_Tanjung_Pelepas_Malaysia]->(c5)
MERGE (c5)-[:From_Tanjung_Pelepas_Malaysia]->(d)

RETURN *

---

# Code for Norfolk virginia

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/b244f0611a0ad4368ce94503f8dcb5dd442350c7/norfolk_us.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (s1:Stop {Name:csvLine.Stop1})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Norfolk_Virginia]->(s1)
MERGE (s1)-[:From_Norfolk_Virginia]->(d)

RETURN *

---

# Code for Pecem

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/b244f0611a0ad4368ce94503f8dcb5dd442350c7/pecem.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (s1:Stop {Name:csvLine.Stop1})

MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Pecem_Brazil]->(s1)
MERGE (s1)-[:From_Pecem_Brazil]->(c5)
MERGE (c5)-[:From_Pecem_Brazil]->(d)

RETURN *

---

# Code for Jakarta

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/b244f0611a0ad4368ce94503f8dcb5dd442350c7/jakarta.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (s1:Stop {Name:csvLine.Stop1})

MERGE (c4:Chokepoint {Name:csvLine.Chokepoint4})
MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Jakarta_Indonesia]->(s1)
MERGE (s1)-[:From_Jakarta_Indonesia]->(c4)
MERGE (c4)-[:From_Jakarta_Indonesia]->(c5)
MERGE (c5)-[:From_Jakarta_Indonesia]->(d)

RETURN *

---

# Code for Columbo

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/b244f0611a0ad4368ce94503f8dcb5dd442350c7/columbo.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (s1:Stop {Name:csvLine.Stop1})
MERGE (s2:Stop {Name:csvLine.Stop2})

MERGE (c1:Chokepoint {Name:csvLine.Chokepoint1})
MERGE (c5:Chokepoint {Name:csvLine.Chokepoint5})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Columbo_Sri_Lanka]->(c1)
MERGE (c1)-[:From_Columbo_Sri_Lanka]->(s1)
MERGE (s1)-[:From_Columbo_Sri_Lanka]->(s2)
MERGE (s2)-[:From_Columbo_Sri_Lanka]->(c5)
MERGE (c5)-[:From_Columbo_Sri_Lanka]->(d)

RETURN *

---

# Code for Oman

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/b244f0611a0ad4368ce94503f8dcb5dd442350c7/salalah.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (s1:Stop {Name:csvLine.Stop1})
MERGE (s2:Stop {Name:csvLine.Stop2})
MERGE (s3:Stop {Name:csvLine.Stop3})

MERGE (c1:Chokepoint {Name:csvLine.Chokepoint1})
MERGE (c2:Chokepoint {Name:csvLine.Chokepoint2})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Salalah_Oman]->(c1)
MERGE (c1)-[:From_Salalah_Oman]->(s1)
MERGE (s1)-[:From_Salalah_Oman]->(s2)
MERGE (s2)-[:From_Salalah_Oman]->(c2)
MERGE (c2)-[:From_Salalah_Oman]->(s3)
MERGE (s3)-[:From_Salalah_Oman]->(d)

RETURN *

---

# Code for Haifa

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/b244f0611a0ad4368ce94503f8dcb5dd442350c7/haifa.csv?raw=1' AS csvLine

MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (s1:Stop {Name:csvLine.Stop1})
MERGE (s2:Stop {Name:csvLine.Stop2})

MERGE (c2:Chokepoint {Name:csvLine.Chokepoint2})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Haifa_Israel]->(s1)
MERGE (s1)-[:From_Haifa_Israel]->(s2)
MERGE (s2)-[:From_Haifa_Israel]->(c2)
MERGE (c2)-[:From_Haifa_Israel]->(d)

RETURN *

---

# Code for Puerto Cortes

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/b244f0611a0ad4368ce94503f8dcb5dd442350c7/puerto_cortes_honduras.csv?raw=1' AS csvLine


MERGE (o:Port {Name: csvLine.Origin, Country: csvLine.Country, Port_code: csvLine.port_code, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})

MERGE (s1:Stop {Name:csvLine.Stop1})
MERGE (s2:Stop {Name:csvLine.Stop2})

MERGE (d:Destination {Destination:csvLine.Destination})

MERGE (o)-[:From_Puerto_Cortes_Honduras]->(s1)
MERGE (s1)-[:From_Puerto_Cortes_Honduras]->(s2)
MERGE (s2)-[:From_Puerto_Cortes_Honduras]->(d)

RETURN *



MATCH (o:Port_of_origin)
WHERE distance(o.coords, point({longitude:-87.9482495827955, latitude:15.8468491734727})) <5000
RETURN o

PROFILE MATCH (p:Point)
WHERE
point.distance(p.location, point({latitude: 37.563434, longitude:-122.322255})) < 200
RETURN p{.*} AS point

=========================================
=========================================

#Import GNFR supplier data

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/582be8d3bf91337cb55864d13e2e7b5eba166e39/supplier_data/gnfr_supplier_list.csv?raw=1' AS csvLine

MERGE (g:GNFR_supplier_site {Site_name: csvLine.sitename, Supplier: csvLine.supplier_name, Country: csvLine.country, City: csvLine.city, Product_type: csvLine.product_type, Total_workers: csvLine.total_workers, Workers_union_or_committee_present: csvLine.workers_committee_or_union, Percentage_female_workers: csvLine.female_worker_percent})
MERGE (c:Country {Name:csvLine.country})

MERGE (g)-[:Site_located_in]->(c)

RETURN *

---


#Import GM supplier data

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/0edc6db020732ca6427791df7556927df5858887/supplier_data/gm_supplier_list.csv?raw=1' AS csvLine

MERGE (p:GM_production_site {Site_name: csvLine.sitename, Country: csvLine.country, City: csvLine.city, Product_type: csvLine.product_type, Total_workers: csvLine.total_workers, Workers_union_or_committee_present: csvLine.workers_committee_or_union, Percentage_female_workers: csvLine.female_worker_percent, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})
MERGE (o:Port {Name: csvLine.exported_from})
MERGE (c:Country {Name:csvLine.country})

MERGE (p)-[:Site_located_in]->(c)
MERGE (p)-[:Exported_from]->(o)

RETURN *

---

#Import textile/tu supplier data

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/a87d4288d83654617970748a614b0b37170a46ce/supplier_data/tu_factory_list.csv?raw=1' AS csvLine

MERGE (t:Textile_factory {Factory_name: csvLine.sitename, Supplier_name: csvLine.supplier, Country: csvLine.country, City: csvLine.city, Product_type: csvLine.product_type, Total_workers: csvLine.total_workers, Workers_union_or_committee_present: csvLine.workers_committee_or_union, Percentage_female_workers: csvLine.female_worker_percent, Migrant_workers:csvLine.migrant_workers, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})
MERGE (o:Port {Name: csvLine.exported_from})
MERGE (c:Country {Name:csvLine.country})

MERGE (t)-[:Factory_located_in]->(c)
MERGE (t)-[:Exported_from]->(o)

RETURN *

---
#Import food supplier data

LOAD CSV WITH HEADERS FROM 'https://github.com/towableslow/kgraph/blob/0edc6db020732ca6427791df7556927df5858887/supplier_data/food_supplier_list.csv?raw=1' AS csvLine

MERGE (f:Food_supplier {Site_name: csvLine.sitename, Country: csvLine.country, City: csvLine.city, Product_type: csvLine.product_type, Total_workers: csvLine.total_workers, coords: point({longitude: TOFLOAT(csvLine.longitude), latitude: TOFLOAT(csvLine.latitude)})})
MERGE (o:Port {Name: csvLine.exported_from})
MERGE (c:Country {Name:csvLine.country})

MERGE (f)-[:Factory_located_in]->(c)
MERGE (f)-[:Exported_from]->(o)

RETURN *

---
# Create indexes

CREATE INDEX ON :Chokepoint(Name)

CREATE INDEX chokepoint_name FOR (c:Chokepoint) ON (c:Name)

CREATE INDEX employee_p_id FOR (n:employee) ON (n:p_id)